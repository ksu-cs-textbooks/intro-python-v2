<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basic Python :: Introduction to Python</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/</link><description/><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning to Program</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/01-learning-to-program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/01-learning-to-program/</guid><description>Resources Slides Learning to program involves learning not only the syntax and rules of a new language, but also a new way of thinking. Not only do we want to write code that is understandable by the computer, we must also understand what the computer will do when it tries to run that code.
A key part of that is learning to think like a computer thinks. We sometimes call this our “mental model” of a computer.</description></item><item><title>Working in the Terminal</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/02-working-in-terminal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/02-working-in-terminal/</guid><description>Resources Slides First, let’s start with the basics of writing Python code in a file and running those files. This is the first major step toward actually writing a real program, but it can definitely be difficult the first time without prior experience to rely on. So, let’s go through it step by step and make sure we know how to run our programs in Python.
At this point, we should already have Python installed on our system.</description></item><item><title>Print Statement</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/03-print-statement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/03-print-statement/</guid><description>Resources Slides Before we learn to write our first program, let’s start by introducing some important vocabulary terms:
string: A string in programming is any text that is stored as a value. We typically represent strings by placing them inside double quotes "" in our code and elsewhere. value: A value is a piece of data that our program is storing and manipulating. In our pseudocode, values consist of either numbers or strings.</description></item><item><title>Using Print</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/04-using-print/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/04-using-print/</guid><description>Resources Slides One important key to remember: by default, the print(expression) statement in Python will add a newline to the end of the output by default. This means that multiple print(expression) statements will print on multiple lines. Let’s look at some examples!
Throughout this course, we’ll show many different code examples and their output here in the lab. To test them out, feel free to copy the code examples to a Python file and run it yourself.</description></item><item><title>Print Practice</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/05-print-practice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/05-print-practice/</guid><description>Let’s try some simple practice problems. These problems are not graded - they are just for you to practice before doing the real exercises in the lab itself. You can find the answers below each question by clicking the button below each question.
1.1 Reading Code What is the output that is displayed to the user after running the following Python code:
print("Kansas State University") print("Manhattan ", end="") print("KS", end=" ") print("66506") print("KSU!</description></item><item><title>Variables</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/06-variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/06-variables/</guid><description>Resources Slides Now that we’ve learned how to use the print(expression) statement, let’s focus on the next major concept in Python, as well as any other programming language: variables.
The word variable is traditionally defined as a value that can change. We’ve seen variables like $ x $ used in Algebraic equations like $ x + 4 = 7 $ to represent unknown values that we can try to work out.</description></item><item><title>Code Tracing</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/07-code-tracing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/07-code-tracing/</guid><description>Resources Slides As we learn to write more complex programs in Python, it is important to make sure we can still mentally execute the code we are writing in our “mental model” of a computer before we actually run it on a computer. After all, if we don’t have at least an idea of what the code actually does before we write it, we really haven’t learned much about programming!</description></item><item><title>Variables Practice</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/08-variables-practice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/08-variables-practice/</guid><description>Let’s try some simple practice problems. These problems are not graded - they are just for you to practice before doing the real exercises in the lab itself. You can find the answers below each question by clicking the button below each question.
1.4 Reading Code Write the output that is displayed to the user after running the following Python code:
a = "two" b = a c = a print(c, end=" ") c = "one" b = c a = "three" print(a, end=" ") print(c) Answer 1.</description></item><item><title>Summary</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/09-summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/01-basic-python/09-summary/</guid><description>Python We introduced some basic statements and structures in the Python programming language. Let’s quickly review them!
Print Statement The print(expression) statement is used to print output on the terminal.
It will evaluate expression to a value, then display it to the screen. By default, it will add a newline to the end of the output. We can change that using the end parameter, such as print(expression, end="") to remove the newline.</description></item></channel></rss>