<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Numbers &amp; Math :: Introduction to Python</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/</link><description/><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/index.xml" rel="self" type="application/rss+xml"/><item><title>Integers</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/01-integers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/01-integers/</guid><description>YouTube Video Resources Slides test So far, we’ve only worked with string values in Python. Strings are a very useful data type in programming languages such as Python, but they are very limited in their use. Recall that a data type simply defines how a particular value is stored in a computer. The str data type is used to store string values in Python. Python supports many different data types for handling various data that we’d like to store and manipulate in our programs.</description></item><item><title>Floats</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/02-floats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/02-floats/</guid><description>YouTube Video Resources Slides The other type of number we can store in Python is a floating-point number. We won’t go into too much detail about floating-point values here, since you’ll learn about them elsewhere in this class. For the purposes of programming, the only thing to know about floating-point numbers is that they are used to represent numbers that include a fractional or decimal portion. In Python, these values are stored in the float data type.</description></item><item><title>Types</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/03-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/03-types/</guid><description>YouTube Video Resources Slides Determining Variable Type One thing that is very useful to know how to do in Python is determining the type of data stored in a variable. Python is very flexible, and we can store any type of data in any variable. In fact, a variable’s data type can even change in Python, which is something that many other programming languages won’t allow. Technically speaking, we would say that Python uses strong typing, which means that each variable has a known data type that we can find, and dynamic typing, meaning that the type of the variable can change while the program is running.</description></item><item><title>Basic Operators</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/04-basic-operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/04-basic-operators/</guid><description>YouTube Video Resources Slides Now that we have the ability to store numerical data in variables in Python, we should also learn how to manipulate that data into something new. To do that, let’s learn about operators. An operator in programming is a special symbol that can be used in an expression to manipulate the data in some way.
Most operators are binary operators, which means they perform an operation that uses two values as input and produces a single value as output.</description></item><item><title>New Operators</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/05-new-operators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/05-new-operators/</guid><description>YouTube Video Resources Slides Modulo Operator The Python programming language also includes a few math operators that are not commonly used outside of programming.
The first one is the modulo operator. The modulo operator is used to find the remainder of a division operation. If we think back to math again, we’ve probably learned how to perform long division when dividing two values. At the end, we might be left with a remainder, or a portion of the first number that is left over after the operation is complete.</description></item><item><title>Resulting Types</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/06-resulting-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/06-resulting-types/</guid><description>YouTube Video Resources Slides Since Python has multiple numeric data types, there are some rules that govern which data type is produced as a result of various math operations. Thankfully, the rules themselves are pretty straightforward once they are explained.
Resulting Data Types - Same Type The basic rule to remember, if a mathematical operator is applied to two variables of the same data type, the result will also be that data type.</description></item><item><title>Order of Operations</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/07-order-of-operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/07-order-of-operations/</guid><description>YouTube Video Resources Slides Finally, just like in mathematics, we must also be aware of the order that these operators are applied, especially if they are combined into a single expression. Thankfully, the same rules we learned in mathematics apply in programming as well. Specifically, operators in Python are applied in this order:
Operations in parentheses are resolved first, moving from left to right. ** is resolved second, moving from left to right *, /, // and % are resolved third, moving from left to right.</description></item><item><title>Math Practice</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/08-math-practice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/08-math-practice/</guid><description>Let’s try some simple practice problems. These problems are not graded - they are just for you to practice before doing the real exercises in the lab itself. You can find the answers below each question by clicking the button below each question.
2.1 Reading Code Write the output that is displayed to the user after running the following Python code:
x = 13 z = "5" y = int(z) var = (x + y) % y * y - x var = var / 2 print(var)Pay special attention to data types!</description></item><item><title>Summary</title><link>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/09-summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python-v2/02-numbers/09-summary/</guid><description>In this lab, we covered several major important topics. Let’s quickly review them.
Data Types in Python str data type stores text (strings). Use str(expression) to convert an expression to a string if possible. int data type stores whole numbers (integers). Use int(expression) to convert an expression to an integer if possible. float data type stored decimal numbers (floating-point). Use float(expression) to convert an expression to a floating-point value, if possible.</description></item></channel></rss>