<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Classes :: Introduction to Python</title><link>https://textbooks.cs.ksu.edu/intro-python/09-classes/</link><description/><generator>Hugo</generator><language>en-us</language><atom:link href="https://textbooks.cs.ksu.edu/intro-python/09-classes/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://textbooks.cs.ksu.edu/intro-python/09-classes/01-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python/09-classes/01-intro/</guid><description>YouTube Video Resources Slides We’ve explored many ways to store data in our programs, from simple variables all the way to complex data structures such as lists and dictionaries. The real world, however, isn’t made up of lists and dictionaries, but objects that may have several attributes that describe the object, as well as several functions that the object can perform or that can be performed using the object. So, it would be very useful for us to have a way to represent those concepts directly in our programs.</description></item><item><title>Classes</title><link>https://textbooks.cs.ksu.edu/intro-python/09-classes/02-classes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://textbooks.cs.ksu.edu/intro-python/09-classes/02-classes/</guid><description>YouTube Video Resources Slides First, let’s look at how we can create our own classes in Python. A class is a special construct in programming that forms the blueprint for something that represents a some sort of object, such as real-world objects like a person, car, or even abstract objects such as a user interface in a video game. Classes contain two different types of content, the attributes, or variables, that store data related to the class, and the methods, or functions, that describe the behavior of the class.</description></item></channel></rss>